{
 "Resources": {
  "TheVPC92636AB0": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "WakeOnLambdaIntegTest/TheVPC"
     }
    ]
   }
  },
  "TheVPCPublicSubnet1Subnet770D4FF2": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/17",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "WakeOnLambdaIntegTest/TheVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCPublicSubnet1RouteTable17DA183D": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "WakeOnLambdaIntegTest/TheVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCPublicSubnet1RouteTableAssociationE5186D77": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "TheVPCPublicSubnet1RouteTable17DA183D"
    },
    "SubnetId": {
     "Ref": "TheVPCPublicSubnet1Subnet770D4FF2"
    }
   }
  },
  "TheVPCIsolatedSubnet1SubnetCC3EE328": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/17",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Isolated"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "WakeOnLambdaIntegTest/TheVPC/IsolatedSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCIsolatedSubnet1RouteTable8FA5B31C": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "WakeOnLambdaIntegTest/TheVPC/IsolatedSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCIsolatedSubnet1RouteTableAssociationBA437D9E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "TheVPCIsolatedSubnet1RouteTable8FA5B31C"
    },
    "SubnetId": {
     "Ref": "TheVPCIsolatedSubnet1SubnetCC3EE328"
    }
   }
  },
  "TheVPCRestrictDefaultSecurityGroupCustomResourceAFA88FCE": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "TheVPC92636AB0",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "TheVPC92636AB0",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "dd5711540f04e06aa955d7f4862fc04e8cdea464cb590dae91ed2976bb78098e.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ]
  },
  "InstanceRole3CCE2F1D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     }
    ]
   }
  },
  "InstanceSg4966687D": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "WakeOnLambdaIntegTest/InstanceSg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TargetInstanceInstanceProfile5B66EC03": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "InstanceRole3CCE2F1D"
     }
    ]
   }
  },
  "TargetInstanceE71F7A30": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "TargetInstanceInstanceProfile5B66EC03"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t2.micro",
    "LaunchTemplate": {
     "LaunchTemplateName": "WakeOnLambdaIntegTestTargetInstanceLaunchTemplate437A2FDD",
     "Version": {
      "Fn::GetAtt": [
       "TargetInstanceLaunchTemplate571C274C",
       "LatestVersionNumber"
      ]
     }
    },
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "InstanceSg4966687D",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "TheVPCIsolatedSubnet1SubnetCC3EE328"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "WakeOnLambdaIntegTest/TargetInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash"
    }
   },
   "DependsOn": [
    "InstanceRole3CCE2F1D"
   ]
  },
  "TargetInstanceLaunchTemplate571C274C": {
   "Type": "AWS::EC2::LaunchTemplate",
   "Properties": {
    "LaunchTemplateData": {
     "MetadataOptions": {
      "HttpTokens": "required"
     }
    },
    "LaunchTemplateName": "WakeOnLambdaIntegTestTargetInstanceLaunchTemplate437A2FDD"
   }
  },
  "WakeOnLambdaFunctionServiceRole023D5E15": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "WakeOnLambdaFunctionServiceRoleDefaultPolicy492356ED": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:DescribeInstanceStatus",
        "ec2:DescribeInstances"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "ec2:StartInstances",
       "Condition": {
        "StringEquals": {
         "ec2:InstanceID": {
          "Ref": "TargetInstanceE71F7A30"
         }
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WakeOnLambdaFunctionServiceRoleDefaultPolicy492356ED",
    "Roles": [
     {
      "Ref": "WakeOnLambdaFunctionServiceRole023D5E15"
     }
    ]
   }
  },
  "WakeOnLambdaFunction359D6D7A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "68e38f3e89c03a0e6402ce46b0fcca43214ced6cb3f2b5926d785739efdfd2cd.zip"
    },
    "Environment": {
     "Variables": {
      "INSTANCE_ID": {
       "Ref": "TargetInstanceE71F7A30"
      },
      "DESTINATION_URL": "http://xxx.com"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "WakeOnLambdaFunctionServiceRole023D5E15",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 600
   },
   "DependsOn": [
    "WakeOnLambdaFunctionServiceRoleDefaultPolicy492356ED",
    "WakeOnLambdaFunctionServiceRole023D5E15"
   ]
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Outputs": {
  "ExportsOutputRefWakeOnLambdaFunction359D6D7A179B06A3": {
   "Value": {
    "Ref": "WakeOnLambdaFunction359D6D7A"
   },
   "Export": {
    "Name": "WakeOnLambdaIntegTest:ExportsOutputRefWakeOnLambdaFunction359D6D7A179B06A3"
   }
  },
  "ExportsOutputFnGetAttWakeOnLambdaFunction359D6D7AArnE25C1F0D": {
   "Value": {
    "Fn::GetAtt": [
     "WakeOnLambdaFunction359D6D7A",
     "Arn"
    ]
   },
   "Export": {
    "Name": "WakeOnLambdaIntegTest:ExportsOutputFnGetAttWakeOnLambdaFunction359D6D7AArnE25C1F0D"
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}